// <auto-generated />
using Dotnet_RPG.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Dotnet_RPG.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CharacterSkill", b =>
                {
                    b.Property<int>("CharactersId")
                        .HasColumnType("int");

                    b.Property<int>("SkillsId")
                        .HasColumnType("int");

                    b.HasKey("CharactersId", "SkillsId");

                    b.HasIndex("SkillsId");

                    b.ToTable("CharacterSkill");
                });

            modelBuilder.Entity("Dotnet_RPG.Models.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Class")
                        .HasColumnType("int");

                    b.Property<int>("Defense")
                        .HasColumnType("int");

                    b.Property<int>("HitPoints")
                        .HasColumnType("int");

                    b.Property<int>("Intelligence")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Strength")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Characters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Class = 1,
                            Defense = 20,
                            HitPoints = 50,
                            Intelligence = 10,
                            Name = "Frodo",
                            Strength = 60,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Class = 1,
                            Defense = 40,
                            HitPoints = 80,
                            Intelligence = 60,
                            Name = "Sam",
                            Strength = 10,
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            Class = 1,
                            Defense = 100,
                            HitPoints = 200,
                            Intelligence = 100,
                            Name = "Sauron",
                            Strength = 100,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("Dotnet_RPG.Models.Skill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Damage")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Skills");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Damage = 30,
                            Name = "Fireball"
                        },
                        new
                        {
                            Id = 2,
                            Damage = 20,
                            Name = "Frenzy"
                        },
                        new
                        {
                            Id = 3,
                            Damage = 50,
                            Name = "Blizzard"
                        });
                });

            modelBuilder.Entity("Dotnet_RPG.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PasswordHash = new byte[] { 194, 208, 130, 191, 72, 82, 148, 215, 5, 133, 12, 37, 8, 72, 182, 219, 254, 249, 210, 164, 249, 0, 246, 119, 68, 39, 162, 212, 236, 114, 165, 5, 8, 23, 165, 185, 34, 189, 37, 175, 255, 235, 107, 61, 124, 69, 125, 22, 62, 119, 27, 5, 207, 162, 93, 48, 153, 109, 140, 80, 38, 189, 166, 118 },
                            PasswordSalt = new byte[] { 101, 4, 122, 50, 48, 58, 78, 229, 118, 206, 81, 54, 227, 155, 105, 127, 24, 63, 248, 68, 53, 176, 122, 33, 104, 35, 71, 208, 105, 108, 6, 59, 52, 242, 14, 175, 199, 195, 139, 127, 165, 65, 50, 8, 73, 23, 55, 213, 212, 96, 166, 179, 54, 10, 143, 218, 82, 193, 66, 54, 84, 39, 61, 247, 219, 3, 207, 58, 146, 40, 80, 60, 62, 127, 38, 120, 0, 95, 248, 63, 77, 247, 191, 229, 138, 207, 205, 165, 146, 125, 16, 243, 134, 126, 234, 196, 37, 144, 116, 206, 80, 59, 183, 50, 200, 129, 122, 252, 110, 78, 115, 41, 208, 229, 246, 82, 124, 141, 122, 205, 126, 44, 17, 37, 84, 204, 143, 241 },
                            Username = "Nico"
                        },
                        new
                        {
                            Id = 2,
                            PasswordHash = new byte[] { 194, 208, 130, 191, 72, 82, 148, 215, 5, 133, 12, 37, 8, 72, 182, 219, 254, 249, 210, 164, 249, 0, 246, 119, 68, 39, 162, 212, 236, 114, 165, 5, 8, 23, 165, 185, 34, 189, 37, 175, 255, 235, 107, 61, 124, 69, 125, 22, 62, 119, 27, 5, 207, 162, 93, 48, 153, 109, 140, 80, 38, 189, 166, 118 },
                            PasswordSalt = new byte[] { 101, 4, 122, 50, 48, 58, 78, 229, 118, 206, 81, 54, 227, 155, 105, 127, 24, 63, 248, 68, 53, 176, 122, 33, 104, 35, 71, 208, 105, 108, 6, 59, 52, 242, 14, 175, 199, 195, 139, 127, 165, 65, 50, 8, 73, 23, 55, 213, 212, 96, 166, 179, 54, 10, 143, 218, 82, 193, 66, 54, 84, 39, 61, 247, 219, 3, 207, 58, 146, 40, 80, 60, 62, 127, 38, 120, 0, 95, 248, 63, 77, 247, 191, 229, 138, 207, 205, 165, 146, 125, 16, 243, 134, 126, 234, 196, 37, 144, 116, 206, 80, 59, 183, 50, 200, 129, 122, 252, 110, 78, 115, 41, 208, 229, 246, 82, 124, 141, 122, 205, 126, 44, 17, 37, 84, 204, 143, 241 },
                            Username = "Giu"
                        });
                });

            modelBuilder.Entity("Dotnet_RPG.Models.Weapon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CharacterId")
                        .HasColumnType("int");

                    b.Property<int>("Damage")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId")
                        .IsUnique();

                    b.ToTable("Weapons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CharacterId = 1,
                            Damage = 200,
                            Name = "Excalibur"
                        },
                        new
                        {
                            Id = 2,
                            CharacterId = 2,
                            Damage = 150,
                            Name = "Master Sword"
                        },
                        new
                        {
                            Id = 3,
                            CharacterId = 3,
                            Damage = 100,
                            Name = "Ashbringer"
                        });
                });

            modelBuilder.Entity("CharacterSkill", b =>
                {
                    b.HasOne("Dotnet_RPG.Models.Character", null)
                        .WithMany()
                        .HasForeignKey("CharactersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dotnet_RPG.Models.Skill", null)
                        .WithMany()
                        .HasForeignKey("SkillsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Dotnet_RPG.Models.Character", b =>
                {
                    b.HasOne("Dotnet_RPG.Models.User", "User")
                        .WithMany("Characters")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Dotnet_RPG.Models.Weapon", b =>
                {
                    b.HasOne("Dotnet_RPG.Models.Character", "Character")
                        .WithOne("Weapon")
                        .HasForeignKey("Dotnet_RPG.Models.Weapon", "CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");
                });

            modelBuilder.Entity("Dotnet_RPG.Models.Character", b =>
                {
                    b.Navigation("Weapon");
                });

            modelBuilder.Entity("Dotnet_RPG.Models.User", b =>
                {
                    b.Navigation("Characters");
                });
#pragma warning restore 612, 618
        }
    }
}
